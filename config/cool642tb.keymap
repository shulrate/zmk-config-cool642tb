#include <input/processors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    chosen {
        zmk,mouse-sensitivities = <100 200>; // X軸100%, Y軸200%
        zmk,input-processor-report-rate-limit = <100>;
    };

    combos {
        compatible = "zmk,combos";

        hatena {
            bindings = <&kp LS(QUESTION)>;
            key-positions = <30 31>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <39 40 38 41>;
        };

        bikkuri {
            bindings = <&kp EXCLAMATION>;
            key-positions = <25 24>;
        };

        Setting_layer {
            bindings = <&mo 7>;
            key-positions = <11 12 10>;
        };

        santen_ri-da {
            bindings = <&santen_ridan>;
            key-positions = <14 13>;
        };

        codeblock {
            bindings = <&codeblock>;
            key-positions = <1 2>;
        };
    };

    macros {
        ctrl_layer: ctrl_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &sl 0>;
            label = "CTRL_LAYER";
        };

        tap_only: tap_only {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TAP_ONLY";
        };

        santen_ridan: santen_ridan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp FSLH &kp FSLH>;
            label = "SANTEN_RIDAN";
        };

        codeblock: codeblock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
            label = "CODEBLOCK";
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp UP_ARROW>, <&kp DOWN_ARROW>;

            tap-ms = <40>;
            label = "behavior_sensor_rotate_up_down";
        };

        win_and_qwerty: win_and_qwerty {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_AND_QWERTY";
            #binding-cells = <0>;
            bindings = <&kp LWIN>, <&tog 1>, <&tog 9>;
        };

        mt_hs: mt_hs {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HS";
            bindings = <&tap_only>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &mt_hs LC(Q) COMMA  &mt_hs LC(W) U  &mt_hs LC(E) E  &mt_hs LC(R) DOT                                                   &mt_hs LC(T) X  &mt_hs LC(Y) W  &mt_hs LC(U) R  &mt_hs LC(I) Y      &mt_hs LC(O) P
&lt 6 TAB       &mt_hs LC(A) I      &mt_hs LC(S) A  &mt_hs LC(D) O  &mt_hs LC(F) MINUS  &kp C_PLAY_PAUSE    &mt_hs LC(G) Q             &mt_hs LC(H) K  &mt_hs LC(J) T  &mt_hs LC(K) N  &lt 5 S             &mt_hs LC(P) H
&kp LEFT_SHIFT  &mt_hs LC(Z) Z      &mt_hs LC(X) L  &mt_hs LC(C) C  &mt_hs LC(V) V      &mt_hs LC(L) SLASH  &mt_hs LC(LEFT_BRACKET) F  &mt_hs LC(B) G  &mt_hs LC(N) D  &mt_hs LC(M) M  &mt_hs LC(COMMA) B  &mt_hs LC(DOT) J
&kp LCTRL       &kp LALT            &kp DELETE      &kp BACKSPACE   &lt 2 SPACE         &kp F14             &lt 1 F13                  &lt 3 ENTER                                                         &win_and_qwerty
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOL_UP>;
        };

        QWERTY {
            bindings = <
&trans  &kp Q   &kp W   &kp E   &kp R                           &kp T   &kp Y  &kp U  &kp I      &kp O
&trans  &kp A   &kp S   &kp D   &kp F      &none        &kp G   &kp H   &kp J  &kp K  &kp L      &kp P
&trans  &kp Z   &kp X   &kp C   &kp V      &lt 2 ENTER  &none   &kp B   &kp N  &kp M  &kp COMMA  &kp PERIOD
&trans  &trans  &trans  &trans  &kp SPACE  &lt 8 F14    &trans  &trans                           &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&none      &kp F7    &kp F8  &kp F9  &kp F12                &kp MINUS         &mt_hs LC(N7) N7              &mt_hs LC(N8) N8              &mt_hs LC(N9) N9              &kp SLASH
&none      &kp F4    &kp F5  &kp F6  &kp F11  &none  &none  &kp PLUS          &mt_hs LC(NUMBER_4) NUMBER_4  &mt_hs LC(N5) N5              &mt_hs LC(NUMBER_6) NUMBER_6  &kp ASTERISK
&kp LSHFT  &kp F1    &kp F2  &kp F3  &kp F10  &none  &none  &mt_hs LC(N0) N0  &mt_hs RC(NUMBER_1) NUMBER_1  &mt_hs LC(NUMBER_2) NUMBER_2  &mt_hs LC(NUMBER_3) NUMBER_3  &kp EQUAL
&kp LCTRL  &kp LALT  &trans  &trans  &trans   &none  &none  &kp KP_DOT                                                                                                  &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        Symbol {
            bindings = <
&kp GRAVE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AT_SIGN    &kp DOLLAR                                           &kp DOUBLE_QUOTES  &kp HOME        &kp UP_ARROW    &kp END        &none
&kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp HASH       &kp PERCENT  &trans                &kp SINGLE_QUOTE  &kp COLON          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT      &none
&kp LEFT_SHIFT  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AMPERSAND  &kp CARET    &kp PIPE              &none             &kp SEMI           &kp PAGE_UP     &none           &kp PAGE_DOWN  &none
&kp LCTRL       &kp LEFT_ALT          &kp DELETE             &kp BACKSPACE  &kp SPACE    &kp NON_US_BACKSLASH  &none             &none                                                             &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &mkp MB4   &mkp MCLK  &kp DEL
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp LCLK  &mo 5      &mkp RCLK
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4   &tog 5     &mkp MB5
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &mkp MB4   &mkp MCLK  &kp DEL
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp LCLK  &tog 5     &mkp RCLK
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4   &tog 5     &mkp MB5
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        other {
            bindings = <
&trans  &kp LA(Q)        &kp C_VOLUME_DOWN       &kp C_VOLUME_UP  &trans                  &trans  &kp F16  &kp F17  &kp F18  &trans
&trans  &kp PRINTSCREEN  &mt_hs LG(N) LG(LA(N))  &kp C_PP         &trans  &trans  &trans  &trans  &kp F19  &kp F20  &kp F21  &trans
&trans  &kp C_PREVIOUS   &kp C_NEXT              &kp F15          &trans  &trans  &trans  &trans  &kp F22  &kp F23  &kp F24  &trans
&trans  &trans           &trans                  &trans           &trans  &trans  &trans  &trans                             &trans
            >;
        };

        Settings {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &bt BT_CLR  &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans        &trans        &trans        &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans        &trans        &trans        &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &bootloader  &trans                                                &trans
            >;
        };

        game_num {
            bindings = <
&trans  &kp N7  &kp N8  &kp N9  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &kp N4  &kp N5  &kp N6  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N0  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        arrow_mode {
            bindings = <
&trans  &trans  &trans  &trans  &trans                     &trans      &trans          &kp UP_ARROW    &trans           &trans
&trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans      &trans          &trans          &trans           &trans
&trans  &trans  &trans  &trans  &kp SPACE  &trans  &trans  &kp RETURN                                                   &trans
            >;
        };
    };
};
